import '@/styles/globals.css'
import Head from 'next/head'
import AppContext from '@/AppContext'
import { useState } from 'react'
import AuthMiddleware from '@/middlewares/auth'

export default function App({ Component, pageProps }) {
  function setCookie(name, value, days) {
    var expires = "";
    if (days) {
      var date = new Date();
      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
      expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "") + expires + "; path=/";
  }

  function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) == ' ') c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
  }

  function deleteCookie(name) {
    document.cookie = name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
  }

  const [token, setToken] = useState(null)

  return (
    <AppContext.Provider
      value={{
        state: {
          token: token
        },
        // cookies
        setCookie: setCookie,
        getCookie: getCookie,
        deleteCookie: deleteCookie,
        // token
        setToken: setToken,
      }}
    >
      <AuthMiddleware />
      <Head>
        <title>Metrola</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {
        Component.layout
          ?
          <Component.layout children={<Component {...pageProps} />} />
          :
          <Component {...pageProps} />
      }
    </AppContext.Provider>
  )
}
